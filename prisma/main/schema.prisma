generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
  output        = "../generated/main"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  name         String
  email        String        @unique
  cognitoId    String?       @unique
  verified     Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  profileImage String?
  transactions Transaction[]
  autoWork     AutoWork?
  subscription Subscription?
  webBuild     WebBuild?
  workMan      WorkMan?
}

model Subscription {
  id            String       @id @default(cuid())
  userId        String       @unique
  plan          Plan         @default(NONE)
  transactionId String?     @unique
  transaction   Transaction? @relation(fields: [transactionId], references: [id])
  startDate     DateTime?
  expiryDate    DateTime?
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Transaction {
  id           String        @id @default(cuid())
  orderId      String
  paymentId    String?
  amount       Float
  userId       String
  User         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Subscription Subscription?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model WebBuild {
  id        String   @id @default(cuid())
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model AutoWork {
  id        String   @id @default(cuid())
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WorkMan {
  id        String   @id @default(cuid())
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Plan {
  NONE
  MONTHLY
  YEARLY
}
